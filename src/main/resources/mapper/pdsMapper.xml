<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.board.pds.mapper.PdsMapper">  
  
  <!-- 자료실 목록 조회 -->
  <select id = "getPdsList" >
  	 SELECT  BNO
         , TITLE
         , WRITER
         -- 상관 서브 쿼리 (corelative subquery) : 양방 관계
         , (SELECT COUNT(*) 
	            FROM  FILES F
	            WHERE B.BNO = F.BNO) FILESCOUNT
         , TO_CHAR(REGDATE, 'YYYY-MM-DD' ) REGDATE
         , HIT
 			FROM     BOARD B
 			WHERE    MENU_ID = #{menu_id}
		  ORDER BY BNO DESC
  </select>
  
  <!-- getPds -->
  <select id="getPds">
  	SELECT  BNO
  				, MENU_ID
  				, TITLE
  				, CONTENT
  				, WRITER
  				, TO_CHAR(REGDATE, 'YYYY-MM-DD HH24:MI:SS') REGDATE
  	 FROM   BOARD
  	 WHERE  BNO = #{bno}
  </select>
  
  <select id="getFileList">
  	SELECT  FILE_NUM
  				, BNO
  				, FILENAME
  				, FILEEXT
  				, SFILENAME
  	 FROM   FILES
  	 WHERE  BNO = #{bno}
  </select>
  
  <!-- 자료실 글쓰기 (Board) -->
  <insert id="setWrite">
 		INSERT INTO BOARD(
 					BNO
 				, MENU_ID
 				, TITLE
 				, CONTENT
 				, WRITER
 				, REGDATE
 				, HIT
 		)
 		 VALUES (
 		 			(SELECT NVL(MAX(BNO), 0)+1 FROM BOARD)
 		 		, #{menu_id}
 		 		, #{title}
 		 		, #{content}
 		 		, #{writer}
 		 		, SYSDATE
 		 		, 0
 		 )
  </insert>
  
  
  <!-- 자료실 파일 정보 저장(Files) -->
  <!-- FileInsert : 넘어온 파일 여러개를 한 번에 저장 insert all
  	ORACLE INSERT ALL 반복 시 
  	1)	SELECT NVL(MAX(file_num),0) + 1,
  	2) 	SEQUENCE는 한 번만 실행되기에
  		INSERT ALL 에 바로 삽입 x
  		별도의 Oracle 함수를 생성하여 호출해야 값 증가 가능
  		
  		select(max()), sequence는 여러번 적어도 한 번만 호출돼서 insert value 증가x
  		=>  oracle 별도 함수에 sequence를 저장하여 반복호출 하면 됨

   -->
   
  <insert id="setFileWrite">
  	<foreach collection="fileList" item="file"
	  		index = "i"
	  		open  = "INSERT ALL"
	  		close = "SELECT * FROM DUAL"
	  		separator = " ">
	  	INTO FILES VALUES (	  	
		  		GET_FILENUM()                
		  		, (SELECT MAX(BNO) FROM BOARD)
		  		, #{file.filename}
		  		, #{file.fileext}
		  		, #{file.sfilename}	
	  	)	
  	</foreach>
  	
  </insert>
  
  
</mapper>
